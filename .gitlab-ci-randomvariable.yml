building_random_variable_test:
  stage: build_tests
  script:
  - cd build
  - make test_random_variable
  - cd ..
  artifacts:
    paths:
      - build/*
    expire_in: 1 day
  dependencies:
    - building

testing_random_variable:
  allow_failure: true
  needs: ["building_random_variable_test"]
  stage: test
  script:
  - cd build
  - g++ -o test_random_variable -fprofile-arcs -ftest-coverage ../test/test_random_variable.cpp ../src/random_variable.cpp ../src/exp_variable.cpp
  - ./test_random_variable -r junit > report_random_variable.xml
  after_script:
  - cd build
  - gcovr --filter '\.\./src/exp_variable.cpp'
  - gcovr --filter '\.\./src/exp_variable.cpp' --xml-pretty > cov_random_variable.xml 
  - cd ..
  dependencies:
    - building_random_variable_test
  artifacts:
    when: always
    paths:
      - build/report_random_variable.xml
      - build/cov_random_variable.xml
      - build/test_random_variable*
    reports:
      junit: build/report_random_variable.xml
      cobertura: build/cov_random_variable.xml
    expire_in: 1 day